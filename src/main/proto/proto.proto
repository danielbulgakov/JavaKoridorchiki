syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

package gRPC;
option java_multiple_files = true;
option java_package = "GRPC";
option java_outer_classname = "ServiceProto";

// Main client server interaction objects
// Used since sending data using sockets
message ClientMessage {
  ClientInfo identity = 1;
  int32 row = 2;
  int32 column = 3;
}

message ServerMessage {
  message Field {
    enum CellType {
      Player0 = 0;
      Player1 = 1;
      Empty = 2;
    }

    repeated CellType cellType = 1;
  }

  repeated Field field = 1;
  repeated ClientInfo clients = 2;
  ClientInfo winner = 3;
  ClientInfo nextMoveBy = 4;
}

// Helpers type message objects to declare message types
// needed in main server client message objects
message ClientInfo {
  string name = 1;
  int32 score = 2;
  int32 wins = 3;
}

// Enhanced message to handle new connections to Server
message RegisterResponse {
  bool connected = 1;
  string comment = 2;
  ClientInfo identity = 3;
}


// Service
service GameService {
  rpc RegisterName(google.protobuf.StringValue) returns (RegisterResponse) {}
  rpc MakeMove(ClientMessage) returns (ServerMessage) {}
  rpc UpdateInfo(google.protobuf.Empty) returns (ServerMessage) {}
  rpc Subscribe(google.protobuf.Empty) returns (stream ServerMessage) {}
}